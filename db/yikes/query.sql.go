// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: query.sql

package yikes

import (
	"context"
)

const createToken = `-- name: CreateToken :exec
insert into tokens(token, session_key) values($1,$2)
`

type CreateTokenParams struct {
	Token      []byte
	SessionKey string
}

func (q *Queries) CreateToken(ctx context.Context, arg CreateTokenParams) error {
	_, err := q.db.Exec(ctx, createToken, arg.Token, arg.SessionKey)
	return err
}

const getTokenBySessionKey = `-- name: GetTokenBySessionKey :one
select id, token, session_key from tokens where session_key = $1 limit 1
`

func (q *Queries) GetTokenBySessionKey(ctx context.Context, sessionKey string) (Token, error) {
	row := q.db.QueryRow(ctx, getTokenBySessionKey, sessionKey)
	var i Token
	err := row.Scan(&i.ID, &i.Token, &i.SessionKey)
	return i, err
}
